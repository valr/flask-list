"""init db

Revision ID: 71ba5fcc6043
Revises: 
Create Date: 2022-11-26 23:15:02.699460

"""
from alembic import op
import sqlalchemy as sa
import flask_list


# revision identifiers, used by Alembic.
revision = '71ba5fcc6043'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('list',
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('private', sa.Boolean(), nullable=False),
    sa.Column('version_id', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('list_id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('list', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_list_list_id'), ['list_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_list_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=1000), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('updated_on', sa.DateTime(), nullable=False),
    sa.Column('version_id', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_user_id'), ['user_id'], unique=True)

    op.create_table('category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.Column('version_id', sa.String(length=32), nullable=False),
    sa.Column('list_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['list_id'], ['list.list_id'], ),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('list_id', 'name'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_category_category_id'), ['category_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_category_list_id'), ['list_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_category_name'), ['name'], unique=False)

    op.create_table('item',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.Column('type', sa.Enum('selection', 'number', 'text', name='itemtype'), nullable=False),
    sa.Column('selection', sa.Boolean(), nullable=False),
    sa.Column('number', flask_list.models.SqliteNumeric(length=1000), nullable=False),
    sa.Column('text', sa.String(length=1000), nullable=False),
    sa.Column('version_id', sa.String(length=32), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.category_id'], ),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('category_id', 'name'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_item_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_item_item_id'), ['item_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_item_name'), ['name'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_item_name'))
        batch_op.drop_index(batch_op.f('ix_item_item_id'))
        batch_op.drop_index(batch_op.f('ix_item_category_id'))

    op.drop_table('item')
    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_category_name'))
        batch_op.drop_index(batch_op.f('ix_category_list_id'))
        batch_op.drop_index(batch_op.f('ix_category_category_id'))

    op.drop_table('category')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('list', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_list_name'))
        batch_op.drop_index(batch_op.f('ix_list_list_id'))

    op.drop_table('list')
    # ### end Alembic commands ###
